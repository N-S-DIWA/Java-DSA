//
//// Queue ->
//
//// front ( f ) = 0;   -> this is helpful while dequeuing the queue.
//// rear  ( r ) = -1;  -> this is helpful while enqueuing the queue.
//
////  Circular Queue
//
//// Static Queue
//
//class Queue{
//
//    private int front;
//    private int rear;
//    private int size;
//    private int[] arr;
//    private int capacity;
//
//    public Queue(int capacity){
//        this.front = 0;
//        this.rear = -1;
//        this.arr = new int[capacity];
//        this.size = 0;
//        this.capacity = capacity;
//    }
//
//    public boolean isFull(){
//        return size == capacity;
//    }
//
//    public boolean isEmpty(){
//        return size == 0;
//    }
//
////    Enqueueing function ->
//    public void enqueue(int data){
//
//        if(isFull()){
//            throw new RuntimeException("Queue is Full");
//        }
//
//        rear = (rear + 1) % capacity;
//        arr[rear] = data;
//        size++;
//    }
//
////    Dequeuing function ->
//    public int dequeue(){
//
//        if(isEmpty()){
//            throw new RuntimeException("Queue is Empty");
//        }
//        int data = arr[front];
//        front = ( front + 1) % capacity;
//        size --;
//        return data;
//    }
//
////    peek function ->
//    public int peek(){
//
//        if(isEmpty()){
//            System.out.println("Queue is Empty");
//        }
//
//        return arr[front];
//    }
//
////    size function ->
//    public int getSize() {
//        return size;
//    }
//
////    display function ->
//    public void display(){
//
//        if(isEmpty()){
//            System.out.println("Queue is Empty");
//            return;
//        }
//
//        System.out.println("Queue : ");
//
//        for(int i = 0; i < size ; i++){
//
//            int index = (front + i) % capacity;
//            System.out.print(arr[index] + " ");
//        }
//        System.out.println();
//    }
//}
//
//public class Main{
//    public static void main(String[] args) {
//
//        Queue cq = new Queue(5);
//
//        cq.enqueue(10);
//        cq.enqueue(20);
//        cq.enqueue(30);
//        cq.enqueue(40);
//        cq.enqueue(50);
//
//        cq.display(); // 10 20 30 40 50
//
//        System.out.println("Dequeued: " + cq.dequeue());
//        System.out.println("Dequeued: " + cq.dequeue());
//
//        cq.display(); // 30 40 50
//
//        cq.enqueue(60);
//        cq.enqueue(70);
//
//        cq.display(); // 30 40 50 60 70
//
//        System.out.println("Front element: " + cq.peek());
//        System.out.println("Is Full? " + cq.isFull());
//        System.out.println("Is Empty? " + cq.isEmpty());
//    }
//}
